// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: messages.proto

package typedefs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Op:
	//
	//	*Message_ProposeInst
	//	*Message_EchoInst
	//	*Message_ReadyInst
	Op            isMessage_Op `protobuf_oneof:"op"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetOp() isMessage_Op {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *Message) GetProposeInst() *Message_Propose {
	if x != nil {
		if x, ok := x.Op.(*Message_ProposeInst); ok {
			return x.ProposeInst
		}
	}
	return nil
}

func (x *Message) GetEchoInst() *Message_Echo {
	if x != nil {
		if x, ok := x.Op.(*Message_EchoInst); ok {
			return x.EchoInst
		}
	}
	return nil
}

func (x *Message) GetReadyInst() *Message_Ready {
	if x != nil {
		if x, ok := x.Op.(*Message_ReadyInst); ok {
			return x.ReadyInst
		}
	}
	return nil
}

type isMessage_Op interface {
	isMessage_Op()
}

type Message_ProposeInst struct {
	ProposeInst *Message_Propose `protobuf:"bytes,3,opt,name=propose_inst,json=proposeInst,proto3,oneof"`
}

type Message_EchoInst struct {
	EchoInst *Message_Echo `protobuf:"bytes,4,opt,name=echo_inst,json=echoInst,proto3,oneof"`
}

type Message_ReadyInst struct {
	ReadyInst *Message_Ready `protobuf:"bytes,5,opt,name=ready_inst,json=readyInst,proto3,oneof"`
}

func (*Message_ProposeInst) isMessage_Op() {}

func (*Message_EchoInst) isMessage_Op() {}

func (*Message_ReadyInst) isMessage_Op() {}

type Instruction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operation     *Message               `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Instruction) Reset() {
	*x = Instruction{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction) ProtoMessage() {}

func (x *Instruction) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction.ProtoReflect.Descriptor instead.
func (*Instruction) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Instruction) GetOperation() *Message {
	if x != nil {
		return x.Operation
	}
	return nil
}

type Message_Propose struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       [][]byte               `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message_Propose) Reset() {
	*x = Message_Propose{}
	mi := &file_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message_Propose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Propose) ProtoMessage() {}

func (x *Message_Propose) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Propose.ProtoReflect.Descriptor instead.
func (*Message_Propose) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Message_Propose) GetContent() [][]byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Message_Echo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mi            []byte                 `protobuf:"bytes,1,opt,name=mi,proto3" json:"mi,omitempty"`
	H             []byte                 `protobuf:"bytes,2,opt,name=h,proto3" json:"h,omitempty"`
	I             int32                  `protobuf:"varint,3,opt,name=i,proto3" json:"i,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message_Echo) Reset() {
	*x = Message_Echo{}
	mi := &file_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message_Echo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Echo) ProtoMessage() {}

func (x *Message_Echo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Echo.ProtoReflect.Descriptor instead.
func (*Message_Echo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Message_Echo) GetMi() []byte {
	if x != nil {
		return x.Mi
	}
	return nil
}

func (x *Message_Echo) GetH() []byte {
	if x != nil {
		return x.H
	}
	return nil
}

func (x *Message_Echo) GetI() int32 {
	if x != nil {
		return x.I
	}
	return 0
}

type Message_Ready struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mi            []byte                 `protobuf:"bytes,1,opt,name=mi,proto3" json:"mi,omitempty"`
	H             []byte                 `protobuf:"bytes,2,opt,name=h,proto3" json:"h,omitempty"`
	I             int32                  `protobuf:"varint,3,opt,name=i,proto3" json:"i,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message_Ready) Reset() {
	*x = Message_Ready{}
	mi := &file_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message_Ready) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_Ready) ProtoMessage() {}

func (x *Message_Ready) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_Ready.ProtoReflect.Descriptor instead.
func (*Message_Ready) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Message_Ready) GetMi() []byte {
	if x != nil {
		return x.Mi
	}
	return nil
}

func (x *Message_Ready) GetH() []byte {
	if x != nil {
		return x.H
	}
	return nil
}

func (x *Message_Ready) GetI() int32 {
	if x != nil {
		return x.I
	}
	return 0
}

var File_messages_proto protoreflect.FileDescriptor

const file_messages_proto_rawDesc = "" +
	"\n" +
	"\x0emessages.proto\x12\btypedefs\"\xce\x02\n" +
	"\aMessage\x12>\n" +
	"\fpropose_inst\x18\x03 \x01(\v2\x19.typedefs.Message.ProposeH\x00R\vproposeInst\x125\n" +
	"\techo_inst\x18\x04 \x01(\v2\x16.typedefs.Message.EchoH\x00R\bechoInst\x128\n" +
	"\n" +
	"ready_inst\x18\x05 \x01(\v2\x17.typedefs.Message.ReadyH\x00R\treadyInst\x1a#\n" +
	"\aPropose\x12\x18\n" +
	"\acontent\x18\x01 \x03(\fR\acontent\x1a2\n" +
	"\x04Echo\x12\x0e\n" +
	"\x02mi\x18\x01 \x01(\fR\x02mi\x12\f\n" +
	"\x01h\x18\x02 \x01(\fR\x01h\x12\f\n" +
	"\x01i\x18\x03 \x01(\x05R\x01i\x1a3\n" +
	"\x05Ready\x12\x0e\n" +
	"\x02mi\x18\x01 \x01(\fR\x02mi\x12\f\n" +
	"\x01h\x18\x02 \x01(\fR\x01h\x12\f\n" +
	"\x01i\x18\x03 \x01(\x05R\x01iB\x04\n" +
	"\x02op\">\n" +
	"\vInstruction\x12/\n" +
	"\toperation\x18\x01 \x01(\v2\x11.typedefs.MessageR\toperationB\fZ\n" +
	"./typedefsb\x06proto3"

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData []byte
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)))
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_messages_proto_goTypes = []any{
	(*Message)(nil),         // 0: typedefs.Message
	(*Instruction)(nil),     // 1: typedefs.Instruction
	(*Message_Propose)(nil), // 2: typedefs.Message.Propose
	(*Message_Echo)(nil),    // 3: typedefs.Message.Echo
	(*Message_Ready)(nil),   // 4: typedefs.Message.Ready
}
var file_messages_proto_depIdxs = []int32{
	2, // 0: typedefs.Message.propose_inst:type_name -> typedefs.Message.Propose
	3, // 1: typedefs.Message.echo_inst:type_name -> typedefs.Message.Echo
	4, // 2: typedefs.Message.ready_inst:type_name -> typedefs.Message.Ready
	0, // 3: typedefs.Instruction.operation:type_name -> typedefs.Message
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_messages_proto_msgTypes[0].OneofWrappers = []any{
		(*Message_ProposeInst)(nil),
		(*Message_EchoInst)(nil),
		(*Message_ReadyInst)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
